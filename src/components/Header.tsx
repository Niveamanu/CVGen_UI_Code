import React, { useState, useRef, useEffect } from "react";
import { motion } from "framer-motion";
import styles from "./Header.module.scss";
import { staggerContainer, staggerItem } from "../utils/animations";
import { useNavigate } from "react-router-dom";
import { useUser } from "../contexts/UserContext";

export default function Header() {
  const navigate = useNavigate();
  const { user, isLoading, logout } = useUser();
  const [isDropdownOpen, setIsDropdownOpen] = useState(false);
  const dropdownRef = useRef<HTMLDivElement>(null);

  const handleLogoClick = () => {
    navigate("/dashboard");
  };

  const handleLogout = async () => {
    try {
      await logout();
      navigate("/login");
    } catch (error) {
      console.error("Logout failed:", error);
    }
  };

  const toggleDropdown = () => {
    setIsDropdownOpen(!isDropdownOpen);
  };

  const closeDropdown = () => {
    setIsDropdownOpen(false);
  };

  // Close dropdown when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {
        setIsDropdownOpen(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);

  const getUserDisplayName = () => {
    if (!user) return "Not logged in";
    if (user.name && user.name !== "User") return user.name;
    if (user.email) return user.email.split('@')[0]; // Show username part of email
    return "User";
  };

  return (
    <>
    <motion.header 
      className={styles.header}
      variants={staggerContainer}
      initial="initial"
      animate="animate"
    >
      <motion.div className={styles.logoSection} variants={staggerItem} onClick={handleLogoClick}>
        <svg width="202" height="44" viewBox="0 0 202 44" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M60.7568 13.0516V15.9333H67.2341V19.2216H60.7568V24.184H56.4388V9.76025H67.7303V13.0486H60.7568V13.0516Z" fill="#FFEA88"/>
          <path d="M85.3194 20.6057V24.1876H74.901V9.76025H79.219V20.6057H85.3194Z" fill="#FFEA88"/>
          <path d="M107.447 16.9597C107.447 21.1998 104.086 24.3734 99.5166 24.3734C94.9472 24.3734 91.5868 21.2226 91.5868 16.9597C91.5868 12.6969 94.9478 9.63037 99.5173 9.63037C104.087 9.63037 107.447 12.7369 107.447 16.9597ZM96.0061 16.9777C95.9878 17.4602 96.0657 17.9416 96.2353 18.3943C96.4049 18.847 96.6629 19.2621 96.9946 19.6157C97.3262 19.9694 97.725 20.2547 98.168 20.4553C98.611 20.656 99.0896 20.768 99.5763 20.7849C101.484 20.7849 103.021 19.1599 103.021 16.9777C103.021 14.7954 101.484 13.211 99.5763 13.211C99.0917 13.2232 98.6143 13.3306 98.1718 13.527C97.7294 13.7234 97.3306 14.0048 96.9985 14.3551C96.6665 14.7054 96.4079 15.1175 96.2377 15.5675C96.0674 16.0176 95.9889 16.4967 96.0067 16.9771L96.0061 16.9777Z" fill="#FFEA88"/>
          <path d="M128.128 18.0945C128.128 21.9251 125.49 24.3722 121.34 24.3722C117.19 24.3722 114.45 21.9209 114.45 18.0945V9.75415H118.768V18.0945C118.743 18.4444 118.792 18.7955 118.912 19.1255C119.032 19.4556 119.22 19.7572 119.464 20.0111C119.708 20.265 120.003 20.4657 120.329 20.6003C120.656 20.7348 121.007 20.8004 121.361 20.7927C122.814 20.7927 123.813 19.7847 123.813 18.0945V9.75415H128.131V18.0945H128.128Z" fill="#FFEA88"/>
          <path d="M142.56 20.2978H140.275V24.1876H135.957V9.76025H142.745C146.65 9.76025 148.887 11.6107 148.887 14.8834C148.887 17.0244 148.014 18.5903 146.435 19.4733L149.384 24.1876H144.486L142.556 20.2978H142.56ZM142.745 17.0095C143.018 17.0409 143.295 17.011 143.554 16.922C143.814 16.8329 144.051 16.687 144.246 16.4952C144.441 16.3033 144.59 16.0702 144.682 15.8134C144.775 15.5566 144.807 15.2824 144.778 15.0114C144.778 13.7128 144.03 13.0545 142.745 13.0545H140.272V17.0005H142.745V17.0095Z" fill="#FFEA88"/>
          <path d="M156.613 24.1876V9.76025H160.931V24.1876H156.613Z" fill="#FFEA88"/>
          <path d="M181.05 11.2369L179.454 14.5252C177.958 13.6834 175.841 12.9182 174.615 12.9182C173.892 12.9182 173.413 13.1675 173.413 13.7008C173.413 15.8179 181.011 14.5665 181.011 19.7728C181.011 22.8387 178.271 24.3035 175.012 24.3035C172.496 24.2948 170.047 23.4954 168.018 22.0202L169.638 18.7708C171.134 20.0263 173.561 20.9709 175.057 20.9709C175.972 20.9709 176.552 20.6624 176.552 20.0042C176.552 17.8219 168.955 19.2036 168.955 14.1157C168.955 11.3344 171.341 9.56767 174.977 9.56767C177.12 9.56201 179.224 10.1383 181.06 11.2339L181.05 11.2369Z" fill="#FFEA88"/>
          <path d="M197.682 24.1876V18.8151H192.515V24.1876H188.197V9.76025H192.515V15.4999H197.682V9.76025H202V24.1876H197.682Z" fill="#FFEA88"/>
          <path d="M59.2614 34.1206H57.8384V35.8759H56.4388V29.7322H59.13C60.7508 29.7322 61.6715 30.5028 61.6715 31.8672C61.7026 32.2757 61.6084 32.684 61.4014 33.0385C61.1944 33.393 60.8842 33.6772 60.5114 33.8539L61.8331 35.8819H60.2485L59.2674 34.1266L59.2614 34.1206ZM59.13 32.9643C59.9012 32.9643 60.3438 32.6145 60.3438 31.909C60.3438 31.2035 59.9012 30.8831 59.13 30.8831H57.8384V32.9643H59.13Z" fill="#FFEA88"/>
          <path d="M66.6419 30.8766V32.2111H69.6321V33.3614H66.6419V34.7192H70.0602V35.8695H65.2484V29.7263H69.9674V30.8766H66.651H66.6419Z" fill="#FFEA88"/>
          <path d="M78.1662 30.3313L77.6277 31.4816C77.0441 31.1221 76.3829 30.9047 75.6982 30.8472C75.2315 30.8472 74.9089 31.0134 74.9089 31.3453C74.9089 32.4776 78.2102 31.8433 78.2042 34.0614C78.2042 35.2649 77.1514 35.9118 75.776 35.9118C74.7776 35.9074 73.8109 35.5641 73.0366 34.9391L73.5926 33.8067C74.2007 34.3466 74.9731 34.67 75.7874 34.7256C76.3615 34.7256 76.7082 34.5122 76.7082 34.1385C76.7082 32.9822 73.4069 33.6602 73.4069 31.4762C73.4069 30.3612 74.3716 29.6616 75.8049 29.6616C76.6386 29.659 77.4559 29.8914 78.1614 30.3319L78.1662 30.3313Z" fill="#FFEA88"/>
          <path d="M82.9744 30.8766V32.2111H85.9646V33.3614H82.9744V34.7192H86.3952V35.8695H81.5809V29.7263H86.2999V30.8766H82.9835H82.9744Z" fill="#FFEA88"/>
          <path d="M91.1026 34.6778L90.6202 35.87H89.1791L91.8702 29.7268H93.3113L95.9609 35.87H94.4648L93.9825 34.6778H91.1116H91.1026ZM92.5437 31.1731L91.5627 33.5646H93.5182L92.5437 31.1731Z" fill="#FFEA88"/>
          <path d="M101.813 34.1206H100.39V35.8759H98.9908V29.7322H101.68C103.301 29.7322 104.222 30.5028 104.222 31.8672C104.253 32.2757 104.159 32.684 103.952 33.0385C103.745 33.393 103.434 33.6772 103.062 33.8539L104.383 35.8819H102.799L101.818 34.1266L101.813 34.1206ZM101.682 32.9643C102.453 32.9643 102.896 32.6145 102.896 31.909C102.896 31.2035 102.453 30.8831 101.682 30.8831H100.39V32.9643H101.682Z" fill="#FFEA88"/>
          <path d="M113.093 30.7049L112.279 31.689C112.081 31.4524 111.834 31.2591 111.556 31.1213C111.279 30.9835 110.975 30.9043 110.665 30.8885C110.159 30.8885 109.673 31.0878 109.316 31.4425C108.958 31.7973 108.757 32.2784 108.757 32.7801C108.757 33.2818 108.958 33.763 109.316 34.1177C109.673 34.4725 110.159 34.6718 110.665 34.6718C111.275 34.6441 111.852 34.3877 112.279 33.9544L113.105 34.844C112.447 35.521 111.547 35.9149 110.599 35.9411C110.175 35.9536 109.752 35.8811 109.357 35.7279C108.962 35.5747 108.602 35.3441 108.299 35.0497C107.996 34.7553 107.755 34.4034 107.593 34.0148C107.43 33.6262 107.348 33.2091 107.351 32.7884C107.355 32.3676 107.444 31.9519 107.614 31.5662C107.783 31.1804 108.029 30.8325 108.337 30.5433C108.646 30.2541 109.01 30.0296 109.407 29.8831C109.805 29.7366 110.229 29.6713 110.653 29.6909C111.571 29.7025 112.448 30.0684 113.099 30.7109L113.093 30.7049Z" fill="#FFEA88"/>
          <path d="M120.527 35.8753V33.4504H117.722V35.8759H116.323V29.7322H117.722V32.2941H120.527V29.7322H121.927V35.8753H120.527Z" fill="#FFEA88"/>
          <path d="M27.0144 26.7733H17.3859V17.2264H27.0084V26.7673L27.0144 26.7733ZM30.6926 17.2318V26.7733C31.9687 26.7733 33.1925 26.2707 34.0949 25.376C34.9972 24.4813 35.5041 23.2678 35.5041 22.0026C35.5041 20.7373 34.9972 19.5238 34.0949 18.6291C33.1925 17.7344 31.9687 17.2318 30.6926 17.2318ZM17.392 13.5848H27.0144C27.0144 12.9583 26.8899 12.3379 26.6481 11.7591C26.4063 11.1803 26.0519 10.6544 25.6051 10.2114C25.1583 9.76835 24.6279 9.41694 24.0442 9.17719C23.4604 8.93743 22.8347 8.81403 22.2029 8.81403C21.571 8.81403 20.9453 8.93743 20.3616 9.17719C19.7778 9.41694 19.2474 9.76835 18.8006 10.2114C18.3538 10.6544 17.9994 11.1803 17.7576 11.7591C17.5158 12.3379 17.3914 12.9583 17.3914 13.5848H17.392ZM13.7137 26.7727V17.2264C12.4377 17.2264 11.2138 17.7291 10.3115 18.6237C9.40915 19.5184 8.90223 20.7319 8.90223 21.9972C8.90223 23.2625 9.40915 24.4759 10.3115 25.3706C11.2138 26.2653 12.4377 26.7679 13.7137 26.7679V26.7727ZM27.0144 30.4197H17.392C17.392 31.685 17.8989 32.8985 18.8012 33.7932C19.7036 34.6878 20.9274 35.1905 22.2035 35.1905C23.4796 35.1905 24.7034 34.6878 25.6057 33.7932C26.5081 32.8985 27.0144 31.685 27.0144 30.4197ZM37.4207 26.1748L26.4102 37.0896C27.1325 37.81 27.991 38.382 28.9365 38.7729C29.8821 39.1638 30.8962 39.3658 31.9206 39.3674C32.9451 39.3691 33.9598 39.1703 34.9066 38.7824C35.8535 38.3946 36.7138 37.8253 37.4384 37.1072C38.163 36.3891 38.7376 35.5363 39.1292 34.5977C39.5208 33.6591 39.7218 32.6531 39.7207 31.6373C39.7196 30.6215 39.5163 29.6159 39.1225 28.6782C38.7288 27.7404 38.1523 26.8889 37.4261 26.1724L37.4207 26.1748ZM26.4102 6.91429L37.4207 17.8315C38.1473 17.1154 38.7242 16.2641 39.1184 15.3266C39.5126 14.389 39.7163 13.3835 39.718 12.3677C39.7196 11.352 39.5191 10.3459 39.128 9.40704C38.7368 8.46823 38.1627 7.61516 37.4384 6.89672C36.7142 6.17829 35.8541 5.60859 34.9075 5.22028C33.9608 4.83196 32.9462 4.63266 31.9218 4.63379C30.8973 4.63493 29.8831 4.83647 28.9374 5.22687C27.9916 5.61727 27.1328 6.18887 26.4102 6.90891V6.91429ZM6.98564 17.8249L17.9901 6.91369C16.5287 5.47177 14.5502 4.66332 12.4885 4.6656C10.4267 4.66787 8.45007 5.4807 6.99185 6.92584C5.53364 8.37098 4.7129 10.3305 4.70959 12.3747C4.70627 14.419 5.52066 16.3811 6.97418 17.8309L6.98564 17.8249ZM17.9901 37.0854L6.98564 26.1742C6.25909 26.8904 5.68219 27.7416 5.28798 28.6791C4.89377 29.6167 4.69001 30.6222 4.68836 31.638C4.68672 32.6537 4.88722 33.6598 5.27839 34.5987C5.66955 35.5375 6.2437 36.3905 6.96792 37.109C7.69214 37.8274 8.55221 38.3971 9.49886 38.7854C10.4455 39.1737 11.4601 39.373 12.4846 39.3719C13.509 39.3708 14.5232 39.1692 15.469 38.7788C16.4148 38.3884 17.2735 37.8168 17.9961 37.0968L17.9901 37.0854Z" fill="#FFEA88"/>
        </svg>
      </motion.div>
      <div className={styles.userSection}>
        {isLoading ? (
          <div className={styles.loadingUser}>
            <div className="spinner-border spinner-border-sm me-2" role="status">
              <span className="visually-hidden">Loading...</span>
            </div>
            <span>Loading user...</span>
          </div>
        ) : user ? (
          <>
            <span className={styles.user}>{getUserDisplayName()}</span>
            <div className={styles.userMenuContainer} ref={dropdownRef}>
              <div 
                className={styles.avatar} 
                onClick={toggleDropdown}
                title={`${getUserDisplayName()} (${user.email})`}
              >
                {user.initials}
              </div>
              
              {/* Dropdown Menu */}
              {isDropdownOpen && (
                <div className={styles.dropdownMenu}>
                  <div className={styles.dropdownHeader}>
                    <div className={styles.dropdownUserInfo}>
                      <div className={styles.dropdownAvatar}>{user.initials}</div>
                      <div className={styles.dropdownUserDetails}>
                        <span className={styles.dropdownUserName}>{getUserDisplayName()}</span>
                        <span className={styles.dropdownUserEmail}>{user.email}</span>
                      </div>
                    </div>
                  </div>
                  <div className={styles.dropdownDivider}></div>
                  <div className={styles.dropdownItems}>
                    <button 
                      className={styles.dropdownItem}
                      onClick={handleLogout}
                    >
                      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H9" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <path d="M16 17L21 12L16 7" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                        <path d="M21 12H9" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
                      </svg>
                      Sign Out
                    </button>
                  </div>
                </div>
              )}
            </div>
          </>
        ) : (
          <span className={styles.user}>Not logged in</span>
        )}
      </div>
    </motion.header>
    {/* Small Yellow rectangle at bottom */}
    <motion.div
      className={styles.smallYellowRectangle}
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    />
  </>
  );
}

